/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/appwrite@20.0.0/dist/iife/sdk.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(e){"use strict";function t(e,t,i,n){return new(i||(i=Promise))((function(r,o){function a(e){try{c(n.next(e))}catch(e){o(e)}}function s(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))}class i{constructor(e,t,i){this.method=e,this.attribute=t,void 0!==i&&(Array.isArray(i)?this.values=i:this.values=[i])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}i.equal=(e,t)=>new i("equal",e,t).toString(),i.notEqual=(e,t)=>new i("notEqual",e,t).toString(),i.lessThan=(e,t)=>new i("lessThan",e,t).toString(),i.lessThanEqual=(e,t)=>new i("lessThanEqual",e,t).toString(),i.greaterThan=(e,t)=>new i("greaterThan",e,t).toString(),i.greaterThanEqual=(e,t)=>new i("greaterThanEqual",e,t).toString(),i.isNull=e=>new i("isNull",e).toString(),i.isNotNull=e=>new i("isNotNull",e).toString(),i.between=(e,t,n)=>new i("between",e,[t,n]).toString(),i.startsWith=(e,t)=>new i("startsWith",e,t).toString(),i.endsWith=(e,t)=>new i("endsWith",e,t).toString(),i.select=e=>new i("select",void 0,e).toString(),i.search=(e,t)=>new i("search",e,t).toString(),i.orderDesc=e=>new i("orderDesc",e).toString(),i.orderAsc=e=>new i("orderAsc",e).toString(),i.cursorAfter=e=>new i("cursorAfter",void 0,e).toString(),i.cursorBefore=e=>new i("cursorBefore",void 0,e).toString(),i.limit=e=>new i("limit",void 0,e).toString(),i.offset=e=>new i("offset",void 0,e).toString(),i.contains=(e,t)=>new i("contains",e,t).toString(),i.notContains=(e,t)=>new i("notContains",e,t).toString(),i.notSearch=(e,t)=>new i("notSearch",e,t).toString(),i.notBetween=(e,t,n)=>new i("notBetween",e,[t,n]).toString(),i.notStartsWith=(e,t)=>new i("notStartsWith",e,t).toString(),i.notEndsWith=(e,t)=>new i("notEndsWith",e,t).toString(),i.createdBefore=e=>new i("createdBefore",void 0,e).toString(),i.createdAfter=e=>new i("createdAfter",void 0,e).toString(),i.createdBetween=(e,t)=>new i("createdBetween",void 0,[e,t]).toString(),i.updatedBefore=e=>new i("updatedBefore",void 0,e).toString(),i.updatedAfter=e=>new i("updatedAfter",void 0,e).toString(),i.updatedBetween=(e,t)=>new i("updatedBetween",void 0,[e,t]).toString(),i.or=e=>new i("or",void 0,e.map((e=>JSON.parse(e)))).toString(),i.and=e=>new i("and",void 0,e.map((e=>JSON.parse(e)))).toString(),i.distanceEqual=(e,t,n,r=!0)=>new i("distanceEqual",e,[[t,n,r]]).toString(),i.distanceNotEqual=(e,t,n,r=!0)=>new i("distanceNotEqual",e,[[t,n,r]]).toString(),i.distanceGreaterThan=(e,t,n,r=!0)=>new i("distanceGreaterThan",e,[[t,n,r]]).toString(),i.distanceLessThan=(e,t,n,r=!0)=>new i("distanceLessThan",e,[[t,n,r]]).toString(),i.intersects=(e,t)=>new i("intersects",e,[t]).toString(),i.notIntersects=(e,t)=>new i("notIntersects",e,[t]).toString(),i.crosses=(e,t)=>new i("crosses",e,[t]).toString(),i.notCrosses=(e,t)=>new i("notCrosses",e,[t]).toString(),i.overlaps=(e,t)=>new i("overlaps",e,[t]).toString(),i.notOverlaps=(e,t)=>new i("notOverlaps",e,[t]).toString(),i.touches=(e,t)=>new i("touches",e,[t]).toString(),i.notTouches=(e,t)=>new i("notTouches",e,[t]).toString();class n extends Error{constructor(e,t=0,i="",n=""){super(e),this.name="AppwriteException",this.message=e,this.code=t,this.type=i,this.response=n}}class r{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"20.0.0","X-Appwrite-Response-Format":"1.8.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=null===window||void 0===window?void 0:window.setTimeout((()=>{this.realtime.createSocket()}),50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=null===window||void 0===window?void 0:window.setInterval((()=>{var e;null===(e=this.realtime.socket)||void 0===e||e.send(JSON.stringify({type:"ping"}))}),2e4)},createSocket:()=>{var e,t,i;if(this.realtime.channels.size<1)return this.realtime.reconnect=!1,void(null===(e=this.realtime.socket)||void 0===e||e.close());const n=new URLSearchParams;n.set("project",this.config.project),this.realtime.channels.forEach((e=>{n.append("channels[]",e)}));const r=this.config.endpointRealtime+"/realtime?"+n.toString();(r!==this.realtime.url||!this.realtime.socket||(null===(t=this.realtime.socket)||void 0===t?void 0:t.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&(null===(i=this.realtime.socket)||void 0===i?void 0:i.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=r,this.realtime.socket=new WebSocket(r),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",(e=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()})),this.realtime.socket.addEventListener("close",(e=>{var t,i,n;if(!this.realtime.reconnect||"error"===(null===(i=null===(t=this.realtime)||void 0===t?void 0:t.lastMessage)||void 0===i?void 0:i.type)&&1008===(null===(n=this.realtime)||void 0===n?void 0:n.lastMessage.data).code)return void(this.realtime.reconnect=!0);const r=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${r/1e3} seconds.`,e.reason),setTimeout((()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()}),r)})))},onMessage:e=>{var t,i;try{const n=JSON.parse(e.data);switch(this.realtime.lastMessage=n,n.type){case"connected":const e=JSON.parse(null!==(t=window.localStorage.getItem("cookieFallback"))&&void 0!==t?t:"{}"),r=null==e?void 0:e[`a_session_${this.config.project}`],o=n.data;r&&!o.user&&(null===(i=this.realtime.socket)||void 0===i||i.send(JSON.stringify({type:"authentication",data:{session:r}})));break;case"event":let a=n.data;if(null==a?void 0:a.channels){if(!a.channels.some((e=>this.realtime.channels.has(e))))return;this.realtime.subscriptions.forEach((e=>{a.channels.some((t=>e.channels.includes(t)))&&setTimeout((()=>e.callback(a)))}))}break;case"pong":default:break;case"error":throw n.data}}catch(e){console.error(e)}},cleanUp:e=>{this.realtime.channels.forEach((t=>{if(e.includes(t)){Array.from(this.realtime.subscriptions).some((([e,i])=>i.channels.includes(t)))||this.realtime.channels.delete(t)}}))}}}setEndpoint(e){if(!e.startsWith("http://")&&!e.startsWith("https://"))throw new n("Invalid endpoint URL: "+e);return this.config.endpoint=e,this.config.endpointRealtime=e.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(e){if(!e.startsWith("ws://")&&!e.startsWith("wss://"))throw new n("Invalid realtime endpoint URL: "+e);return this.config.endpointRealtime=e,this}setProject(e){return this.headers["X-Appwrite-Project"]=e,this.config.project=e,this}setJWT(e){return this.headers["X-Appwrite-JWT"]=e,this.config.jwt=e,this}setLocale(e){return this.headers["X-Appwrite-Locale"]=e,this.config.locale=e,this}setSession(e){return this.headers["X-Appwrite-Session"]=e,this.config.session=e,this}setDevKey(e){return this.headers["X-Appwrite-Dev-Key"]=e,this.config.devkey=e,this}subscribe(e,t){let i="string"==typeof e?[e]:e;i.forEach((e=>this.realtime.channels.add(e)));const n=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(n,{channels:i,callback:t}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(n),this.realtime.cleanUp(i),this.realtime.connect()}}prepareRequest(e,t,i={},n={}){if(e=e.toUpperCase(),i=Object.assign({},this.headers,i),"undefined"!=typeof window&&window.localStorage){const e=window.localStorage.getItem("cookieFallback");e&&(i["X-Fallback-Cookies"]=e)}let o={method:e,headers:i};if(void 0===i["X-Appwrite-Dev-Key"]&&(o.credentials="include"),"GET"===e)for(const[e,i]of Object.entries(r.flatten(n)))t.searchParams.append(e,i);else switch(i["content-type"]){case"application/json":o.body=JSON.stringify(n);break;case"multipart/form-data":const e=new FormData;for(const[t,i]of Object.entries(n))if(i instanceof File)e.append(t,i,i.name);else if(Array.isArray(i))for(const n of i)e.append(`${t}[]`,n);else e.append(t,i);o.body=e,delete i["content-type"]}return{uri:t.toString(),options:o}}chunkedUpload(e,i,n={},o={},a){var s;return t(this,void 0,void 0,(function*(){const[t,c]=null!==(s=Object.entries(o).find((([e,t])=>t instanceof File)))&&void 0!==s?s:[];if(!c||!t)throw new Error("File not found in payload");if(c.size<=r.CHUNK_SIZE)return yield this.call(e,i,n,o);let d=0,l=null;for(;d<c.size;){let s=d+r.CHUNK_SIZE;s>=c.size&&(s=c.size),n["content-range"]=`bytes ${d}-${s-1}/${c.size}`;const p=c.slice(d,s);let u=Object.assign({},o);u[t]=new File([p],c.name),l=yield this.call(e,i,n,u),a&&"function"==typeof a&&a({$id:l.$id,progress:Math.round(s/c.size*100),sizeUploaded:s,chunksTotal:Math.ceil(c.size/r.CHUNK_SIZE),chunksUploaded:Math.ceil(s/r.CHUNK_SIZE)}),l&&l.$id&&(n["x-appwrite-id"]=l.$id),d=s}return l}))}ping(){return t(this,void 0,void 0,(function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))}))}call(e,i,r={},o={},a="json"){var s,c;return t(this,void 0,void 0,(function*(){const{uri:t,options:d}=this.prepareRequest(e,i,r,o);let l=null;const p=yield fetch(t,d);if("opaque"===p.type)throw new n(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const u=p.headers.get("x-appwrite-warning");if(u&&u.split(";").forEach((e=>console.warn("Warning: "+e))),l=(null===(s=p.headers.get("content-type"))||void 0===s?void 0:s.includes("application/json"))?yield p.json():"arrayBuffer"===a?yield p.arrayBuffer():{message:yield p.text()},400<=p.status){let e="";throw e=(null===(c=p.headers.get("content-type"))||void 0===c?void 0:c.includes("application/json"))||"arrayBuffer"===a?JSON.stringify(l):null==l?void 0:l.message,new n(null==l?void 0:l.message,p.status,null==l?void 0:l.type,e)}const h=p.headers.get("X-Fallback-Cookies");return"undefined"!=typeof window&&window.localStorage&&h&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",h)),l}))}static flatten(e,t=""){let i={};for(const[n,o]of Object.entries(e)){let e=t?t+"["+n+"]":n;Array.isArray(o)?i=Object.assign(Object.assign({},i),r.flatten(o,e)):i[e]=o}return i}}r.CHUNK_SIZE=5242880;class o{constructor(e){this.client=e}static flatten(e,t=""){let i={};for(const[n,r]of Object.entries(e)){let e=t?t+"["+n+"]":n;Array.isArray(r)?i=Object.assign(Object.assign({},i),o.flatten(r,e)):i[e]=r}return i}}o.CHUNK_SIZE=5242880;class a{}a.read=e=>`read("${e}")`,a.write=e=>`write("${e}")`,a.create=e=>`create("${e}")`,a.update=e=>`update("${e}")`,a.delete=e=>`delete("${e}")`;var s,c,d,l,p,u,h,m,w,f;class g{static custom(e){return e}static unique(e=7){const t=function(e,t,i,n){if("a"===i&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?n:"a"===i?n.call(e):n?n.value:t.get(e)}(g,s,"m",c).call(g);let i="";for(let t=0;t<e;t++){i+=Math.floor(16*Math.random()).toString(16)}return t+i}}s=g,c=function(){const e=new Date,t=Math.floor(e.getTime()/1e3),i=e.getMilliseconds();return t.toString(16)+i.toString(16).padStart(5,"0")},e.AuthenticatorType=void 0,(e.AuthenticatorType||(e.AuthenticatorType={})).Totp="totp",e.AuthenticationFactor=void 0,(d=e.AuthenticationFactor||(e.AuthenticationFactor={})).Email="email",d.Phone="phone",d.Totp="totp",d.Recoverycode="recoverycode",e.OAuthProvider=void 0,(l=e.OAuthProvider||(e.OAuthProvider={})).Amazon="amazon",l.Apple="apple",l.Auth0="auth0",l.Authentik="authentik",l.Autodesk="autodesk",l.Bitbucket="bitbucket",l.Bitly="bitly",l.Box="box",l.Dailymotion="dailymotion",l.Discord="discord",l.Disqus="disqus",l.Dropbox="dropbox",l.Etsy="etsy",l.Facebook="facebook",l.Figma="figma",l.Github="github",l.Gitlab="gitlab",l.Google="google",l.Linkedin="linkedin",l.Microsoft="microsoft",l.Notion="notion",l.Oidc="oidc",l.Okta="okta",l.Paypal="paypal",l.PaypalSandbox="paypalSandbox",l.Podio="podio",l.Salesforce="salesforce",l.Slack="slack",l.Spotify="spotify",l.Stripe="stripe",l.Tradeshift="tradeshift",l.TradeshiftBox="tradeshiftBox",l.Twitch="twitch",l.Wordpress="wordpress",l.Yahoo="yahoo",l.Yammer="yammer",l.Yandex="yandex",l.Zoho="zoho",l.Zoom="zoom",l.Mock="mock",e.Browser=void 0,(p=e.Browser||(e.Browser={})).AvantBrowser="aa",p.AndroidWebViewBeta="an",p.GoogleChrome="ch",p.GoogleChromeIOS="ci",p.GoogleChromeMobile="cm",p.Chromium="cr",p.MozillaFirefox="ff",p.Safari="sf",p.MobileSafari="mf",p.MicrosoftEdge="ps",p.MicrosoftEdgeIOS="oi",p.OperaMini="om",p.Opera="op",p.OperaNext="on",e.CreditCard=void 0,(u=e.CreditCard||(e.CreditCard={})).AmericanExpress="amex",u.Argencard="argencard",u.Cabal="cabal",u.Cencosud="cencosud",u.DinersClub="diners",u.Discover="discover",u.Elo="elo",u.Hipercard="hipercard",u.JCB="jcb",u.Mastercard="mastercard",u.Naranja="naranja",u.TarjetaShopping="targeta-shopping",u.UnionPay="unionpay",u.Visa="visa",u.MIR="mir",u.Maestro="maestro",u.Rupay="rupay",e.Flag=void 0,(h=e.Flag||(e.Flag={})).Afghanistan="af",h.Angola="ao",h.Albania="al",h.Andorra="ad",h.UnitedArabEmirates="ae",h.Argentina="ar",h.Armenia="am",h.AntiguaAndBarbuda="ag",h.Australia="au",h.Austria="at",h.Azerbaijan="az",h.Burundi="bi",h.Belgium="be",h.Benin="bj",h.BurkinaFaso="bf",h.Bangladesh="bd",h.Bulgaria="bg",h.Bahrain="bh",h.Bahamas="bs",h.BosniaAndHerzegovina="ba",h.Belarus="by",h.Belize="bz",h.Bolivia="bo",h.Brazil="br",h.Barbados="bb",h.BruneiDarussalam="bn",h.Bhutan="bt",h.Botswana="bw",h.CentralAfricanRepublic="cf",h.Canada="ca",h.Switzerland="ch",h.Chile="cl",h.China="cn",h.CoteDIvoire="ci",h.Cameroon="cm",h.DemocraticRepublicOfTheCongo="cd",h.RepublicOfTheCongo="cg",h.Colombia="co",h.Comoros="km",h.CapeVerde="cv",h.CostaRica="cr",h.Cuba="cu",h.Cyprus="cy",h.CzechRepublic="cz",h.Germany="de",h.Djibouti="dj",h.Dominica="dm",h.Denmark="dk",h.DominicanRepublic="do",h.Algeria="dz",h.Ecuador="ec",h.Egypt="eg",h.Eritrea="er",h.Spain="es",h.Estonia="ee",h.Ethiopia="et",h.Finland="fi",h.Fiji="fj",h.France="fr",h.MicronesiaFederatedStatesOf="fm",h.Gabon="ga",h.UnitedKingdom="gb",h.Georgia="ge",h.Ghana="gh",h.Guinea="gn",h.Gambia="gm",h.GuineaBissau="gw",h.EquatorialGuinea="gq",h.Greece="gr",h.Grenada="gd",h.Guatemala="gt",h.Guyana="gy",h.Honduras="hn",h.Croatia="hr",h.Haiti="ht",h.Hungary="hu",h.Indonesia="id",h.India="in",h.Ireland="ie",h.IranIslamicRepublicOf="ir",h.Iraq="iq",h.Iceland="is",h.Israel="il",h.Italy="it",h.Jamaica="jm",h.Jordan="jo",h.Japan="jp",h.Kazakhstan="kz",h.Kenya="ke",h.Kyrgyzstan="kg",h.Cambodia="kh",h.Kiribati="ki",h.SaintKittsAndNevis="kn",h.SouthKorea="kr",h.Kuwait="kw",h.LaoPeopleSDemocraticRepublic="la",h.Lebanon="lb",h.Liberia="lr",h.Libya="ly",h.SaintLucia="lc",h.Liechtenstein="li",h.SriLanka="lk",h.Lesotho="ls",h.Lithuania="lt",h.Luxembourg="lu",h.Latvia="lv",h.Morocco="ma",h.Monaco="mc",h.Moldova="md",h.Madagascar="mg",h.Maldives="mv",h.Mexico="mx",h.MarshallIslands="mh",h.NorthMacedonia="mk",h.Mali="ml",h.Malta="mt",h.Myanmar="mm",h.Montenegro="me",h.Mongolia="mn",h.Mozambique="mz",h.Mauritania="mr",h.Mauritius="mu",h.Malawi="mw",h.Malaysia="my",h.Namibia="na",h.Niger="ne",h.Nigeria="ng",h.Nicaragua="ni",h.Netherlands="nl",h.Norway="no",h.Nepal="np",h.Nauru="nr",h.NewZealand="nz",h.Oman="om",h.Pakistan="pk",h.Panama="pa",h.Peru="pe",h.Philippines="ph",h.Palau="pw",h.PapuaNewGuinea="pg",h.Poland="pl",h.FrenchPolynesia="pf",h.NorthKorea="kp",h.Portugal="pt",h.Paraguay="py",h.Qatar="qa",h.Romania="ro",h.Russia="ru",h.Rwanda="rw",h.SaudiArabia="sa",h.Sudan="sd",h.Senegal="sn",h.Singapore="sg",h.SolomonIslands="sb",h.SierraLeone="sl",h.ElSalvador="sv",h.SanMarino="sm",h.Somalia="so",h.Serbia="rs",h.SouthSudan="ss",h.SaoTomeAndPrincipe="st",h.Suriname="sr",h.Slovakia="sk",h.Slovenia="si",h.Sweden="se",h.Eswatini="sz",h.Seychelles="sc",h.Syria="sy",h.Chad="td",h.Togo="tg",h.Thailand="th",h.Tajikistan="tj",h.Turkmenistan="tm",h.TimorLeste="tl",h.Tonga="to",h.TrinidadAndTobago="tt",h.Tunisia="tn",h.Turkey="tr",h.Tuvalu="tv",h.Tanzania="tz",h.Uganda="ug",h.Ukraine="ua",h.Uruguay="uy",h.UnitedStates="us",h.Uzbekistan="uz",h.VaticanCity="va",h.SaintVincentAndTheGrenadines="vc",h.Venezuela="ve",h.Vietnam="vn",h.Vanuatu="vu",h.Samoa="ws",h.Yemen="ye",h.SouthAfrica="za",h.Zambia="zm",h.Zimbabwe="zw",e.ExecutionMethod=void 0,(m=e.ExecutionMethod||(e.ExecutionMethod={})).GET="GET",m.POST="POST",m.PUT="PUT",m.PATCH="PATCH",m.DELETE="DELETE",m.OPTIONS="OPTIONS",m.HEAD="HEAD",e.ImageGravity=void 0,(w=e.ImageGravity||(e.ImageGravity={})).Center="center",w.Topleft="top-left",w.Top="top",w.Topright="top-right",w.Left="left",w.Right="right",w.Bottomleft="bottom-left",w.Bottom="bottom",w.Bottomright="bottom-right",e.ImageFormat=void 0,(f=e.ImageFormat||(e.ImageFormat={})).Jpg="jpg",f.Jpeg="jpeg",f.Png="png",f.Webp="webp",f.Heic="heic",f.Avif="avif",f.Gif="gif",e.Account=class{constructor(e){this.client=e}get(){const e=new URL(this.client.config.endpoint+"/account");return this.client.call("get",e,{},{})}create(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,email:t[0],password:t[1],name:t[2]};const r=i.userId,o=i.email,a=i.password,s=i.name;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "email"');if(void 0===a)throw new n('Missing required parameter: "password"');const c={};void 0!==r&&(c.userId=r),void 0!==o&&(c.email=o),void 0!==a&&(c.password=a),void 0!==s&&(c.name=s);const d=new URL(this.client.config.endpoint+"/account");return this.client.call("post",d,{"content-type":"application/json"},c)}updateEmail(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{email:e,password:t[0]};const r=i.email,o=i.password;if(void 0===r)throw new n('Missing required parameter: "email"');if(void 0===o)throw new n('Missing required parameter: "password"');const a={};void 0!==r&&(a.email=r),void 0!==o&&(a.password=o);const s=new URL(this.client.config.endpoint+"/account/email");return this.client.call("patch",s,{"content-type":"application/json"},a)}listIdentities(e){let t;t=!e||e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{queries:e};const i=t.queries,n={};void 0!==i&&(n.queries=i);const r=new URL(this.client.config.endpoint+"/account/identities");return this.client.call("get",r,{},n)}deleteIdentity(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{identityId:e};const i=t.identityId;if(void 0===i)throw new n('Missing required parameter: "identityId"');const r="/account/identities/{identityId}".replace("{identityId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}createJWT(){const e=new URL(this.client.config.endpoint+"/account/jwts");return this.client.call("post",e,{"content-type":"application/json"},{})}listLogs(e){let t;t=!e||e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{queries:e};const i=t.queries,n={};void 0!==i&&(n.queries=i);const r=new URL(this.client.config.endpoint+"/account/logs");return this.client.call("get",r,{},n)}updateMFA(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{mfa:e};const i=t.mfa;if(void 0===i)throw new n('Missing required parameter: "mfa"');const r={};void 0!==i&&(r.mfa=i);const o=new URL(this.client.config.endpoint+"/account/mfa");return this.client.call("patch",o,{"content-type":"application/json"},r)}createMfaAuthenticator(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e};const i=t.type;if(void 0===i)throw new n('Missing required parameter: "type"');const r="/account/mfa/authenticators/{type}".replace("{type}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("post",o,{"content-type":"application/json"},{})}createMFAAuthenticator(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e};const i=t.type;if(void 0===i)throw new n('Missing required parameter: "type"');const r="/account/mfa/authenticators/{type}".replace("{type}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("post",o,{"content-type":"application/json"},{})}updateMfaAuthenticator(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e,otp:t[0]};const r=i.type,o=i.otp;if(void 0===r)throw new n('Missing required parameter: "type"');if(void 0===o)throw new n('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",r),s={};void 0!==o&&(s.otp=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("put",c,{"content-type":"application/json"},s)}updateMFAAuthenticator(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e,otp:t[0]};const r=i.type,o=i.otp;if(void 0===r)throw new n('Missing required parameter: "type"');if(void 0===o)throw new n('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",r),s={};void 0!==o&&(s.otp=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("put",c,{"content-type":"application/json"},s)}deleteMfaAuthenticator(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e};const i=t.type;if(void 0===i)throw new n('Missing required parameter: "type"');const r="/account/mfa/authenticators/{type}".replace("{type}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}deleteMFAAuthenticator(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"type"in e?e||{}:{type:e};const i=t.type;if(void 0===i)throw new n('Missing required parameter: "type"');const r="/account/mfa/authenticators/{type}".replace("{type}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}createMfaChallenge(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"factor"in e?e||{}:{factor:e};const i=t.factor;if(void 0===i)throw new n('Missing required parameter: "factor"');const r={};void 0!==i&&(r.factor=i);const o=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("post",o,{"content-type":"application/json"},r)}createMFAChallenge(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"factor"in e?e||{}:{factor:e};const i=t.factor;if(void 0===i)throw new n('Missing required parameter: "factor"');const r={};void 0!==i&&(r.factor=i);const o=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("post",o,{"content-type":"application/json"},r)}updateMfaChallenge(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{challengeId:e,otp:t[0]};const r=i.challengeId,o=i.otp;if(void 0===r)throw new n('Missing required parameter: "challengeId"');if(void 0===o)throw new n('Missing required parameter: "otp"');const a={};void 0!==r&&(a.challengeId=r),void 0!==o&&(a.otp=o);const s=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("put",s,{"content-type":"application/json"},a)}updateMFAChallenge(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{challengeId:e,otp:t[0]};const r=i.challengeId,o=i.otp;if(void 0===r)throw new n('Missing required parameter: "challengeId"');if(void 0===o)throw new n('Missing required parameter: "otp"');const a={};void 0!==r&&(a.challengeId=r),void 0!==o&&(a.otp=o);const s=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("put",s,{"content-type":"application/json"},a)}listMfaFactors(){const e=new URL(this.client.config.endpoint+"/account/mfa/factors");return this.client.call("get",e,{},{})}listMFAFactors(){const e=new URL(this.client.config.endpoint+"/account/mfa/factors");return this.client.call("get",e,{},{})}getMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("get",e,{},{})}getMFARecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("get",e,{},{})}createMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("post",e,{"content-type":"application/json"},{})}createMFARecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("post",e,{"content-type":"application/json"},{})}updateMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("patch",e,{"content-type":"application/json"},{})}updateMFARecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("patch",e,{"content-type":"application/json"},{})}updateName(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{name:e};const i=t.name;if(void 0===i)throw new n('Missing required parameter: "name"');const r={};void 0!==i&&(r.name=i);const o=new URL(this.client.config.endpoint+"/account/name");return this.client.call("patch",o,{"content-type":"application/json"},r)}updatePassword(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{password:e,oldPassword:t[0]};const r=i.password,o=i.oldPassword;if(void 0===r)throw new n('Missing required parameter: "password"');const a={};void 0!==r&&(a.password=r),void 0!==o&&(a.oldPassword=o);const s=new URL(this.client.config.endpoint+"/account/password");return this.client.call("patch",s,{"content-type":"application/json"},a)}updatePhone(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{phone:e,password:t[0]};const r=i.phone,o=i.password;if(void 0===r)throw new n('Missing required parameter: "phone"');if(void 0===o)throw new n('Missing required parameter: "password"');const a={};void 0!==r&&(a.phone=r),void 0!==o&&(a.password=o);const s=new URL(this.client.config.endpoint+"/account/phone");return this.client.call("patch",s,{"content-type":"application/json"},a)}getPrefs(){const e=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("get",e,{},{})}updatePrefs(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"prefs"in e?e||{}:{prefs:e};const i=t.prefs;if(void 0===i)throw new n('Missing required parameter: "prefs"');const r={};void 0!==i&&(r.prefs=i);const o=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("patch",o,{"content-type":"application/json"},r)}createRecovery(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{email:e,url:t[0]};const r=i.email,o=i.url;if(void 0===r)throw new n('Missing required parameter: "email"');if(void 0===o)throw new n('Missing required parameter: "url"');const a={};void 0!==r&&(a.email=r),void 0!==o&&(a.url=o);const s=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("post",s,{"content-type":"application/json"},a)}updateRecovery(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0],password:t[1]};const r=i.userId,o=i.secret,a=i.password;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');if(void 0===a)throw new n('Missing required parameter: "password"');const s={};void 0!==r&&(s.userId=r),void 0!==o&&(s.secret=o),void 0!==a&&(s.password=a);const c=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("put",c,{"content-type":"application/json"},s)}listSessions(){const e=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("get",e,{},{})}deleteSessions(){const e=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("delete",e,{"content-type":"application/json"},{})}createAnonymousSession(){const e=new URL(this.client.config.endpoint+"/account/sessions/anonymous");return this.client.call("post",e,{"content-type":"application/json"},{})}createEmailPasswordSession(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{email:e,password:t[0]};const r=i.email,o=i.password;if(void 0===r)throw new n('Missing required parameter: "email"');if(void 0===o)throw new n('Missing required parameter: "password"');const a={};void 0!==r&&(a.email=r),void 0!==o&&(a.password=o);const s=new URL(this.client.config.endpoint+"/account/sessions/email");return this.client.call("post",s,{"content-type":"application/json"},a)}updateMagicURLSession(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0]};const r=i.userId,o=i.secret;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+"/account/sessions/magic-url");return this.client.call("put",s,{"content-type":"application/json"},a)}createOAuth2Session(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"provider"in e?e||{}:{provider:e,success:t[0],failure:t[1],scopes:t[2]};const r=i.provider,a=i.success,s=i.failure,c=i.scopes;if(void 0===r)throw new n('Missing required parameter: "provider"');const d="/account/sessions/oauth2/{provider}".replace("{provider}",r),l={};void 0!==a&&(l.success=a),void 0!==s&&(l.failure=s),void 0!==c&&(l.scopes=c);const p=new URL(this.client.config.endpoint+d);l.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(l)))p.searchParams.append(e,t);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?void(window.location.href=p.toString()):p.toString()}updatePhoneSession(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0]};const r=i.userId,o=i.secret;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+"/account/sessions/phone");return this.client.call("put",s,{"content-type":"application/json"},a)}createSession(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0]};const r=i.userId,o=i.secret;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+"/account/sessions/token");return this.client.call("post",s,{"content-type":"application/json"},a)}getSession(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{sessionId:e};const i=t.sessionId;if(void 0===i)throw new n('Missing required parameter: "sessionId"');const r="/account/sessions/{sessionId}".replace("{sessionId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("get",o,{},{})}updateSession(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{sessionId:e};const i=t.sessionId;if(void 0===i)throw new n('Missing required parameter: "sessionId"');const r="/account/sessions/{sessionId}".replace("{sessionId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("patch",o,{"content-type":"application/json"},{})}deleteSession(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{sessionId:e};const i=t.sessionId;if(void 0===i)throw new n('Missing required parameter: "sessionId"');const r="/account/sessions/{sessionId}".replace("{sessionId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}updateStatus(){const e=new URL(this.client.config.endpoint+"/account/status");return this.client.call("patch",e,{"content-type":"application/json"},{})}createPushTarget(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{targetId:e,identifier:t[0],providerId:t[1]};const r=i.targetId,o=i.identifier,a=i.providerId;if(void 0===r)throw new n('Missing required parameter: "targetId"');if(void 0===o)throw new n('Missing required parameter: "identifier"');const s={};void 0!==r&&(s.targetId=r),void 0!==o&&(s.identifier=o),void 0!==a&&(s.providerId=a);const c=new URL(this.client.config.endpoint+"/account/targets/push");return this.client.call("post",c,{"content-type":"application/json"},s)}updatePushTarget(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{targetId:e,identifier:t[0]};const r=i.targetId,o=i.identifier;if(void 0===r)throw new n('Missing required parameter: "targetId"');if(void 0===o)throw new n('Missing required parameter: "identifier"');const a="/account/targets/{targetId}/push".replace("{targetId}",r),s={};void 0!==o&&(s.identifier=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("put",c,{"content-type":"application/json"},s)}deletePushTarget(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{targetId:e};const i=t.targetId;if(void 0===i)throw new n('Missing required parameter: "targetId"');const r="/account/targets/{targetId}/push".replace("{targetId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}createEmailToken(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,email:t[0],phrase:t[1]};const r=i.userId,o=i.email,a=i.phrase;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "email"');const s={};void 0!==r&&(s.userId=r),void 0!==o&&(s.email=o),void 0!==a&&(s.phrase=a);const c=new URL(this.client.config.endpoint+"/account/tokens/email");return this.client.call("post",c,{"content-type":"application/json"},s)}createMagicURLToken(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,email:t[0],url:t[1],phrase:t[2]};const r=i.userId,o=i.email,a=i.url,s=i.phrase;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "email"');const c={};void 0!==r&&(c.userId=r),void 0!==o&&(c.email=o),void 0!==a&&(c.url=a),void 0!==s&&(c.phrase=s);const d=new URL(this.client.config.endpoint+"/account/tokens/magic-url");return this.client.call("post",d,{"content-type":"application/json"},c)}createOAuth2Token(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"provider"in e?e||{}:{provider:e,success:t[0],failure:t[1],scopes:t[2]};const r=i.provider,a=i.success,s=i.failure,c=i.scopes;if(void 0===r)throw new n('Missing required parameter: "provider"');const d="/account/tokens/oauth2/{provider}".replace("{provider}",r),l={};void 0!==a&&(l.success=a),void 0!==s&&(l.failure=s),void 0!==c&&(l.scopes=c);const p=new URL(this.client.config.endpoint+d);l.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(l)))p.searchParams.append(e,t);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?void(window.location.href=p.toString()):p.toString()}createPhoneToken(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,phone:t[0]};const r=i.userId,o=i.phone;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "phone"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.phone=o);const s=new URL(this.client.config.endpoint+"/account/tokens/phone");return this.client.call("post",s,{"content-type":"application/json"},a)}createVerification(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{url:e};const i=t.url;if(void 0===i)throw new n('Missing required parameter: "url"');const r={};void 0!==i&&(r.url=i);const o=new URL(this.client.config.endpoint+"/account/verification");return this.client.call("post",o,{"content-type":"application/json"},r)}updateVerification(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0]};const r=i.userId,o=i.secret;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+"/account/verification");return this.client.call("put",s,{"content-type":"application/json"},a)}createPhoneVerification(){const e=new URL(this.client.config.endpoint+"/account/verification/phone");return this.client.call("post",e,{"content-type":"application/json"},{})}updatePhoneVerification(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{userId:e,secret:t[0]};const r=i.userId,o=i.secret;if(void 0===r)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const a={};void 0!==r&&(a.userId=r),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+"/account/verification/phone");return this.client.call("put",s,{"content-type":"application/json"},a)}},e.AppwriteException=n,e.Avatars=class{constructor(e){this.client=e}getBrowser(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"code"in e?e||{}:{code:e,width:t[0],height:t[1],quality:t[2]};const r=i.code,a=i.width,s=i.height,c=i.quality;if(void 0===r)throw new n('Missing required parameter: "code"');const d="/avatars/browsers/{code}".replace("{code}",r),l={};void 0!==a&&(l.width=a),void 0!==s&&(l.height=s),void 0!==c&&(l.quality=c);const p=new URL(this.client.config.endpoint+d);l.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(l)))p.searchParams.append(e,t);return p.toString()}getCreditCard(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"code"in e?e||{}:{code:e,width:t[0],height:t[1],quality:t[2]};const r=i.code,a=i.width,s=i.height,c=i.quality;if(void 0===r)throw new n('Missing required parameter: "code"');const d="/avatars/credit-cards/{code}".replace("{code}",r),l={};void 0!==a&&(l.width=a),void 0!==s&&(l.height=s),void 0!==c&&(l.quality=c);const p=new URL(this.client.config.endpoint+d);l.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(l)))p.searchParams.append(e,t);return p.toString()}getFavicon(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{url:e};const i=t.url;if(void 0===i)throw new n('Missing required parameter: "url"');const r={};void 0!==i&&(r.url=i);const a=new URL(this.client.config.endpoint+"/avatars/favicon");r.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(r)))a.searchParams.append(e,t);return a.toString()}getFlag(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)&&"code"in e?e||{}:{code:e,width:t[0],height:t[1],quality:t[2]};const r=i.code,a=i.width,s=i.height,c=i.quality;if(void 0===r)throw new n('Missing required parameter: "code"');const d="/avatars/flags/{code}".replace("{code}",r),l={};void 0!==a&&(l.width=a),void 0!==s&&(l.height=s),void 0!==c&&(l.quality=c);const p=new URL(this.client.config.endpoint+d);l.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(l)))p.searchParams.append(e,t);return p.toString()}getImage(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{url:e,width:t[0],height:t[1]};const r=i.url,a=i.width,s=i.height;if(void 0===r)throw new n('Missing required parameter: "url"');const c={};void 0!==r&&(c.url=r),void 0!==a&&(c.width=a),void 0!==s&&(c.height=s);const d=new URL(this.client.config.endpoint+"/avatars/image");c.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(c)))d.searchParams.append(e,t);return d.toString()}getInitials(e,...t){let i;i=!e||e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{name:e,width:t[0],height:t[1],background:t[2]};const n=i.name,r=i.width,a=i.height,s=i.background,c={};void 0!==n&&(c.name=n),void 0!==r&&(c.width=r),void 0!==a&&(c.height=a),void 0!==s&&(c.background=s);const d=new URL(this.client.config.endpoint+"/avatars/initials");c.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(c)))d.searchParams.append(e,t);return d.toString()}getQR(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{text:e,size:t[0],margin:t[1],download:t[2]};const r=i.text,a=i.size,s=i.margin,c=i.download;if(void 0===r)throw new n('Missing required parameter: "text"');const d={};void 0!==r&&(d.text=r),void 0!==a&&(d.size=a),void 0!==s&&(d.margin=s),void 0!==c&&(d.download=c);const l=new URL(this.client.config.endpoint+"/avatars/qr");d.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(d)))l.searchParams.append(e,t);return l.toString()}},e.Client=r,e.Databases=class{constructor(e){this.client=e}listDocuments(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],queries:t[1]};const r=i.databaseId,o=i.collectionId,a=i.queries;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');const s="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",r).replace("{collectionId}",o),c={};void 0!==a&&(c.queries=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("get",d,{},c)}createDocument(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');if(void 0===s)throw new n('Missing required parameter: "data"');const d="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",r).replace("{collectionId}",o),l={};void 0!==a&&(l.documentId=a),void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("post",p,{"content-type":"application/json"},l)}getDocument(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],queries:t[2]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.queries;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');const c="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a),d={};void 0!==s&&(d.queries=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("get",l,{},d)}upsertDocument(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');if(void 0===s)throw new n('Missing required parameter: "data"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a),l={};void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("put",p,{"content-type":"application/json"},l)}updateDocument(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a),l={};void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("patch",p,{"content-type":"application/json"},l)}deleteDocument(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1]};const r=i.databaseId,o=i.collectionId,a=i.documentId;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');const s="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a),c=new URL(this.client.config.endpoint+s);return this.client.call("delete",c,{"content-type":"application/json"},{})}decrementDocumentAttribute(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],attribute:t[2],value:t[3],min:t[4]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.attribute,c=i.value,d=i.min;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');if(void 0===s)throw new n('Missing required parameter: "attribute"');const l="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/decrement".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a).replace("{attribute}",s),p={};void 0!==c&&(p.value=c),void 0!==d&&(p.min=d);const u=new URL(this.client.config.endpoint+l);return this.client.call("patch",u,{"content-type":"application/json"},p)}incrementDocumentAttribute(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,collectionId:t[0],documentId:t[1],attribute:t[2],value:t[3],max:t[4]};const r=i.databaseId,o=i.collectionId,a=i.documentId,s=i.attribute,c=i.value,d=i.max;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "collectionId"');if(void 0===a)throw new n('Missing required parameter: "documentId"');if(void 0===s)throw new n('Missing required parameter: "attribute"');const l="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/increment".replace("{databaseId}",r).replace("{collectionId}",o).replace("{documentId}",a).replace("{attribute}",s),p={};void 0!==c&&(p.value=c),void 0!==d&&(p.max=d);const u=new URL(this.client.config.endpoint+l);return this.client.call("patch",u,{"content-type":"application/json"},p)}},e.Functions=class{constructor(e){this.client=e}listExecutions(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{functionId:e,queries:t[0]};const r=i.functionId,o=i.queries;if(void 0===r)throw new n('Missing required parameter: "functionId"');const a="/functions/{functionId}/executions".replace("{functionId}",r),s={};void 0!==o&&(s.queries=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("get",c,{},s)}createExecution(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{functionId:e,body:t[0],async:t[1],xpath:t[2],method:t[3],headers:t[4],scheduledAt:t[5]};const r=i.functionId,o=i.body,a=i.async,s=i.xpath,c=i.method,d=i.headers,l=i.scheduledAt;if(void 0===r)throw new n('Missing required parameter: "functionId"');const p="/functions/{functionId}/executions".replace("{functionId}",r),u={};void 0!==o&&(u.body=o),void 0!==a&&(u.async=a),void 0!==s&&(u.path=s),void 0!==c&&(u.method=c),void 0!==d&&(u.headers=d),void 0!==l&&(u.scheduledAt=l);const h=new URL(this.client.config.endpoint+p);return this.client.call("post",h,{"content-type":"application/json"},u)}getExecution(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{functionId:e,executionId:t[0]};const r=i.functionId,o=i.executionId;if(void 0===r)throw new n('Missing required parameter: "functionId"');if(void 0===o)throw new n('Missing required parameter: "executionId"');const a="/functions/{functionId}/executions/{executionId}".replace("{functionId}",r).replace("{executionId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("get",s,{},{})}},e.Graphql=class{constructor(e){this.client=e}query(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"query"in e?e||{}:{query:e};const i=t.query;if(void 0===i)throw new n('Missing required parameter: "query"');const r={};void 0!==i&&(r.query=i);const o=new URL(this.client.config.endpoint+"/graphql");return this.client.call("post",o,{"x-sdk-graphql":"true","content-type":"application/json"},r)}mutation(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)&&"query"in e?e||{}:{query:e};const i=t.query;if(void 0===i)throw new n('Missing required parameter: "query"');const r={};void 0!==i&&(r.query=i);const o=new URL(this.client.config.endpoint+"/graphql/mutation");return this.client.call("post",o,{"x-sdk-graphql":"true","content-type":"application/json"},r)}},e.ID=g,e.Locale=class{constructor(e){this.client=e}get(){const e=new URL(this.client.config.endpoint+"/locale");return this.client.call("get",e,{},{})}listCodes(){const e=new URL(this.client.config.endpoint+"/locale/codes");return this.client.call("get",e,{},{})}listContinents(){const e=new URL(this.client.config.endpoint+"/locale/continents");return this.client.call("get",e,{},{})}listCountries(){const e=new URL(this.client.config.endpoint+"/locale/countries");return this.client.call("get",e,{},{})}listCountriesEU(){const e=new URL(this.client.config.endpoint+"/locale/countries/eu");return this.client.call("get",e,{},{})}listCountriesPhones(){const e=new URL(this.client.config.endpoint+"/locale/countries/phones");return this.client.call("get",e,{},{})}listCurrencies(){const e=new URL(this.client.config.endpoint+"/locale/currencies");return this.client.call("get",e,{},{})}listLanguages(){const e=new URL(this.client.config.endpoint+"/locale/languages");return this.client.call("get",e,{},{})}},e.Messaging=class{constructor(e){this.client=e}createSubscriber(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{topicId:e,subscriberId:t[0],targetId:t[1]};const r=i.topicId,o=i.subscriberId,a=i.targetId;if(void 0===r)throw new n('Missing required parameter: "topicId"');if(void 0===o)throw new n('Missing required parameter: "subscriberId"');if(void 0===a)throw new n('Missing required parameter: "targetId"');const s="/messaging/topics/{topicId}/subscribers".replace("{topicId}",r),c={};void 0!==o&&(c.subscriberId=o),void 0!==a&&(c.targetId=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("post",d,{"content-type":"application/json"},c)}deleteSubscriber(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{topicId:e,subscriberId:t[0]};const r=i.topicId,o=i.subscriberId;if(void 0===r)throw new n('Missing required parameter: "topicId"');if(void 0===o)throw new n('Missing required parameter: "subscriberId"');const a="/messaging/topics/{topicId}/subscribers/{subscriberId}".replace("{topicId}",r).replace("{subscriberId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("delete",s,{"content-type":"application/json"},{})}},e.Permission=a,e.Query=i,e.Role=class{static any(){return"any"}static user(e,t=""){return""===t?`user:${e}`:`user:${e}/${t}`}static users(e=""){return""===e?"users":`users/${e}`}static guests(){return"guests"}static team(e,t=""){return""===t?`team:${e}`:`team:${e}/${t}`}static member(e){return`member:${e}`}static label(e){return`label:${e}`}},e.Storage=class{constructor(e){this.client=e}listFiles(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,queries:t[0],search:t[1]};const r=i.bucketId,o=i.queries,a=i.search;if(void 0===r)throw new n('Missing required parameter: "bucketId"');const s="/storage/buckets/{bucketId}/files".replace("{bucketId}",r),c={};void 0!==o&&(c.queries=o),void 0!==a&&(c.search=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("get",d,{},c)}createFile(e,...t){let i,r;e&&"object"==typeof e&&!Array.isArray(e)?(i=e||{},r=null==e?void 0:e.onProgress):(i={bucketId:e,fileId:t[0],file:t[1],permissions:t[2]},r=t[3]);const o=i.bucketId,a=i.fileId,s=i.file,c=i.permissions;if(void 0===o)throw new n('Missing required parameter: "bucketId"');if(void 0===a)throw new n('Missing required parameter: "fileId"');if(void 0===s)throw new n('Missing required parameter: "file"');const d="/storage/buckets/{bucketId}/files".replace("{bucketId}",o),l={};void 0!==a&&(l.fileId=a),void 0!==s&&(l.file=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.chunkedUpload("post",p,{"content-type":"multipart/form-data"},l,r)}getFile(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0]};const r=i.bucketId,o=i.fileId;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===o)throw new n('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",r).replace("{fileId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("get",s,{},{})}updateFile(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0],name:t[1],permissions:t[2]};const r=i.bucketId,o=i.fileId,a=i.name,s=i.permissions;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===o)throw new n('Missing required parameter: "fileId"');const c="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",r).replace("{fileId}",o),d={};void 0!==a&&(d.name=a),void 0!==s&&(d.permissions=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("put",l,{"content-type":"application/json"},d)}deleteFile(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0]};const r=i.bucketId,o=i.fileId;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===o)throw new n('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",r).replace("{fileId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("delete",s,{"content-type":"application/json"},{})}getFileDownload(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0],token:t[1]};const r=i.bucketId,a=i.fileId,s=i.token;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===a)throw new n('Missing required parameter: "fileId"');const c="/storage/buckets/{bucketId}/files/{fileId}/download".replace("{bucketId}",r).replace("{fileId}",a),d={};void 0!==s&&(d.token=s);const l=new URL(this.client.config.endpoint+c);d.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(d)))l.searchParams.append(e,t);return l.toString()}getFilePreview(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0],width:t[1],height:t[2],gravity:t[3],quality:t[4],borderWidth:t[5],borderColor:t[6],borderRadius:t[7],opacity:t[8],rotation:t[9],background:t[10],output:t[11],token:t[12]};const r=i.bucketId,a=i.fileId,s=i.width,c=i.height,d=i.gravity,l=i.quality,p=i.borderWidth,u=i.borderColor,h=i.borderRadius,m=i.opacity,w=i.rotation,f=i.background,g=i.output,y=i.token;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===a)throw new n('Missing required parameter: "fileId"');const I="/storage/buckets/{bucketId}/files/{fileId}/preview".replace("{bucketId}",r).replace("{fileId}",a),b={};void 0!==s&&(b.width=s),void 0!==c&&(b.height=c),void 0!==d&&(b.gravity=d),void 0!==l&&(b.quality=l),void 0!==p&&(b.borderWidth=p),void 0!==u&&(b.borderColor=u),void 0!==h&&(b.borderRadius=h),void 0!==m&&(b.opacity=m),void 0!==w&&(b.rotation=w),void 0!==f&&(b.background=f),void 0!==g&&(b.output=g),void 0!==y&&(b.token=y);const v=new URL(this.client.config.endpoint+I);b.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(b)))v.searchParams.append(e,t);return v.toString()}getFileView(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{bucketId:e,fileId:t[0],token:t[1]};const r=i.bucketId,a=i.fileId,s=i.token;if(void 0===r)throw new n('Missing required parameter: "bucketId"');if(void 0===a)throw new n('Missing required parameter: "fileId"');const c="/storage/buckets/{bucketId}/files/{fileId}/view".replace("{bucketId}",r).replace("{fileId}",a),d={};void 0!==s&&(d.token=s);const l=new URL(this.client.config.endpoint+c);d.project=this.client.config.project;for(const[e,t]of Object.entries(o.flatten(d)))l.searchParams.append(e,t);return l.toString()}},e.TablesDB=class{constructor(e){this.client=e}listRows(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],queries:t[1]};const r=i.databaseId,o=i.tableId,a=i.queries;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');const s="/tablesdb/{databaseId}/tables/{tableId}/rows".replace("{databaseId}",r).replace("{tableId}",o),c={};void 0!==a&&(c.queries=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("get",d,{},c)}createRow(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');if(void 0===s)throw new n('Missing required parameter: "data"');const d="/tablesdb/{databaseId}/tables/{tableId}/rows".replace("{databaseId}",r).replace("{tableId}",o),l={};void 0!==a&&(l.rowId=a),void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("post",p,{"content-type":"application/json"},l)}getRow(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],queries:t[2]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.queries;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');const c="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a),d={};void 0!==s&&(d.queries=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("get",l,{},d)}upsertRow(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');const d="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a),l={};void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("put",p,{"content-type":"application/json"},l)}updateRow(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],data:t[2],permissions:t[3]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.data,c=i.permissions;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');const d="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a),l={};void 0!==s&&(l.data=s),void 0!==c&&(l.permissions=c);const p=new URL(this.client.config.endpoint+d);return this.client.call("patch",p,{"content-type":"application/json"},l)}deleteRow(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1]};const r=i.databaseId,o=i.tableId,a=i.rowId;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');const s="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a),c=new URL(this.client.config.endpoint+s);return this.client.call("delete",c,{"content-type":"application/json"},{})}decrementRowColumn(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],column:t[2],value:t[3],min:t[4]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.column,c=i.value,d=i.min;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');if(void 0===s)throw new n('Missing required parameter: "column"');const l="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}/{column}/decrement".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a).replace("{column}",s),p={};void 0!==c&&(p.value=c),void 0!==d&&(p.min=d);const u=new URL(this.client.config.endpoint+l);return this.client.call("patch",u,{"content-type":"application/json"},p)}incrementRowColumn(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{databaseId:e,tableId:t[0],rowId:t[1],column:t[2],value:t[3],max:t[4]};const r=i.databaseId,o=i.tableId,a=i.rowId,s=i.column,c=i.value,d=i.max;if(void 0===r)throw new n('Missing required parameter: "databaseId"');if(void 0===o)throw new n('Missing required parameter: "tableId"');if(void 0===a)throw new n('Missing required parameter: "rowId"');if(void 0===s)throw new n('Missing required parameter: "column"');const l="/tablesdb/{databaseId}/tables/{tableId}/rows/{rowId}/{column}/increment".replace("{databaseId}",r).replace("{tableId}",o).replace("{rowId}",a).replace("{column}",s),p={};void 0!==c&&(p.value=c),void 0!==d&&(p.max=d);const u=new URL(this.client.config.endpoint+l);return this.client.call("patch",u,{"content-type":"application/json"},p)}},e.Teams=class{constructor(e){this.client=e}list(e,...t){let i;i=!e||e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{queries:e,search:t[0]};const n=i.queries,r=i.search,o={};void 0!==n&&(o.queries=n),void 0!==r&&(o.search=r);const a=new URL(this.client.config.endpoint+"/teams");return this.client.call("get",a,{},o)}create(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,name:t[0],roles:t[1]};const r=i.teamId,o=i.name,a=i.roles;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "name"');const s={};void 0!==r&&(s.teamId=r),void 0!==o&&(s.name=o),void 0!==a&&(s.roles=a);const c=new URL(this.client.config.endpoint+"/teams");return this.client.call("post",c,{"content-type":"application/json"},s)}get(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e};const i=t.teamId;if(void 0===i)throw new n('Missing required parameter: "teamId"');const r="/teams/{teamId}".replace("{teamId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("get",o,{},{})}updateName(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,name:t[0]};const r=i.teamId,o=i.name;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "name"');const a="/teams/{teamId}".replace("{teamId}",r),s={};void 0!==o&&(s.name=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("put",c,{"content-type":"application/json"},s)}delete(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e};const i=t.teamId;if(void 0===i)throw new n('Missing required parameter: "teamId"');const r="/teams/{teamId}".replace("{teamId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("delete",o,{"content-type":"application/json"},{})}listMemberships(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,queries:t[0],search:t[1]};const r=i.teamId,o=i.queries,a=i.search;if(void 0===r)throw new n('Missing required parameter: "teamId"');const s="/teams/{teamId}/memberships".replace("{teamId}",r),c={};void 0!==o&&(c.queries=o),void 0!==a&&(c.search=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("get",d,{},c)}createMembership(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,roles:t[0],email:t[1],userId:t[2],phone:t[3],url:t[4],name:t[5]};const r=i.teamId,o=i.roles,a=i.email,s=i.userId,c=i.phone,d=i.url,l=i.name;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "roles"');const p="/teams/{teamId}/memberships".replace("{teamId}",r),u={};void 0!==a&&(u.email=a),void 0!==s&&(u.userId=s),void 0!==c&&(u.phone=c),void 0!==o&&(u.roles=o),void 0!==d&&(u.url=d),void 0!==l&&(u.name=l);const h=new URL(this.client.config.endpoint+p);return this.client.call("post",h,{"content-type":"application/json"},u)}getMembership(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,membershipId:t[0]};const r=i.teamId,o=i.membershipId;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "membershipId"');const a="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",r).replace("{membershipId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("get",s,{},{})}updateMembership(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,membershipId:t[0],roles:t[1]};const r=i.teamId,o=i.membershipId,a=i.roles;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "membershipId"');if(void 0===a)throw new n('Missing required parameter: "roles"');const s="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",r).replace("{membershipId}",o),c={};void 0!==a&&(c.roles=a);const d=new URL(this.client.config.endpoint+s);return this.client.call("patch",d,{"content-type":"application/json"},c)}deleteMembership(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,membershipId:t[0]};const r=i.teamId,o=i.membershipId;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "membershipId"');const a="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",r).replace("{membershipId}",o),s=new URL(this.client.config.endpoint+a);return this.client.call("delete",s,{"content-type":"application/json"},{})}updateMembershipStatus(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,membershipId:t[0],userId:t[1],secret:t[2]};const r=i.teamId,o=i.membershipId,a=i.userId,s=i.secret;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "membershipId"');if(void 0===a)throw new n('Missing required parameter: "userId"');if(void 0===s)throw new n('Missing required parameter: "secret"');const c="/teams/{teamId}/memberships/{membershipId}/status".replace("{teamId}",r).replace("{membershipId}",o),d={};void 0!==a&&(d.userId=a),void 0!==s&&(d.secret=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("patch",l,{"content-type":"application/json"},d)}getPrefs(e){let t;t=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e};const i=t.teamId;if(void 0===i)throw new n('Missing required parameter: "teamId"');const r="/teams/{teamId}/prefs".replace("{teamId}",i),o=new URL(this.client.config.endpoint+r);return this.client.call("get",o,{},{})}updatePrefs(e,...t){let i;i=e&&"object"==typeof e&&!Array.isArray(e)?e||{}:{teamId:e,prefs:t[0]};const r=i.teamId,o=i.prefs;if(void 0===r)throw new n('Missing required parameter: "teamId"');if(void 0===o)throw new n('Missing required parameter: "prefs"');const a="/teams/{teamId}/prefs".replace("{teamId}",r),s={};void 0!==o&&(s.prefs=o);const c=new URL(this.client.config.endpoint+a);return this.client.call("put",c,{"content-type":"application/json"},s)}},Object.defineProperty(e,"__esModule",{value:!0})}(this.Appwrite=this.Appwrite||{});
//# sourceMappingURL=/sm/f7289ed8ce8f7bc1506348d3e9d99fc89e72f67747a74fa6e28166a3e33eee75.map